<?xml version="1.0" encoding="UTF-8" ?>
<OpenSimDocument Version="40000">
	<AnalyzeTool name="cyclingleg">
		<!--Name of the .osim file used to construct a model.-->
		<model_file>C:/Users/david/GitHub/spec-opensim/student-project-ME485/docman-cyclingmodel-1812/../docman-cyclingmodel-1811/simplified_cycling_modelV4.osim</model_file>
		<!--Replace the model's force set with sets specified in <force_set_files>? If false, the force set is appended to.-->
		<replace_force_set>false</replace_force_set>
		<!--List of xml files used to construct a force set for the model.-->
		<force_set_files />
		<!--Directory used for writing results.-->
		<results_directory>C:/Users/david/GitHub/spec-opensim/student-project-ME485/docman-cyclingmodel-1812/../results-4-marker-locations</results_directory>
		<!--Output precision.  It is 8 by default.-->
		<output_precision>8</output_precision>
		<!--Initial time for the simulation.-->
		<initial_time>0</initial_time>
		<!--Final time for the simulation.-->
		<final_time>1</final_time>
		<!--Flag indicating whether or not to compute equilibrium values for states other than the coordinates or speeds.  For example, equilibrium muscle fiber lengths or muscle forces.-->
		<solve_for_equilibrium_for_auxiliary_states>false</solve_for_equilibrium_for_auxiliary_states>
		<!--Maximum number of integrator steps.-->
		<maximum_number_of_integrator_steps>20000</maximum_number_of_integrator_steps>
		<!--Maximum integration step size.-->
		<maximum_integrator_step_size>1</maximum_integrator_step_size>
		<!--Minimum integration step size.-->
		<minimum_integrator_step_size>1e-08</minimum_integrator_step_size>
		<!--Integrator error tolerance. When the error is greater, the integrator step size is decreased.-->
		<integrator_error_tolerance>1.0000000000000001e-05</integrator_error_tolerance>
		<!--Set of analyses to be run during the investigation.-->
		<AnalysisSet name="Analyses">
			<objects>
				<PointKinematics name="PointKinematics">
					<!--Flag (true or false) specifying whether on. True by default.-->
					<on>true</on>
					<!--Start time.-->
					<start_time>0</start_time>
					<!--End time.-->
					<end_time>1</end_time>
					<!--Specifies how often to store results during a simulation. More specifically, the interval (a positive integer) specifies how many successful integration steps should be taken before results are recorded again.-->
					<step_interval>1</step_interval>
					<!--Flag (true or false) indicating whether the results are in degrees or not.-->
					<in_degrees>true</in_degrees>
					<body_name>pelvis</body_name>
					<relative_to_body_name>none</relative_to_body_name>
					<point_name>RASI</point_name>
					<point> 0.00201364 -0.00150927 0.129764</point>
				</PointKinematics>
				<PointKinematics name="PointKinematics">
					<!--Flag (true or false) specifying whether on. True by default.-->
					<on>true</on>
					<!--Start time.-->
					<start_time>0</start_time>
					<!--End time.-->
					<end_time>1</end_time>
					<!--Specifies how often to store results during a simulation. More specifically, the interval (a positive integer) specifies how many successful integration steps should be taken before results are recorded again.-->
					<step_interval>1</step_interval>
					<!--Flag (true or false) indicating whether the results are in degrees or not.-->
					<in_degrees>true</in_degrees>
					<body_name>femur_r</body_name>
					<relative_to_body_name>none</relative_to_body_name>
					<point_name>RKNE</point_name>
					<point> 0.00196336 -0.470462 0.00554672</point>
				</PointKinematics>
				<PointKinematics name="PointKinematics">
					<!--Flag (true or false) specifying whether on. True by default.-->
					<on>true</on>
					<!--Start time.-->
					<start_time>0</start_time>
					<!--End time.-->
					<end_time>1</end_time>
					<!--Specifies how often to store results during a simulation. More specifically, the interval (a positive integer) specifies how many successful integration steps should be taken before results are recorded again.-->
					<step_interval>1</step_interval>
					<!--Flag (true or false) indicating whether the results are in degrees or not.-->
					<in_degrees>true</in_degrees>
					<body_name>pelvis</body_name>
					<relative_to_body_name>none</relative_to_body_name>
					<point_name>LASI</point_name>
					<point> 0.00201364 -0.00150927 -0.129764</point>
				</PointKinematics>
				<PointKinematics name="PointKinematics">
					<!--Flag (true or false) specifying whether on. True by default.-->
					<on>true</on>
					<!--Start time.-->
					<start_time>0</start_time>
					<!--End time.-->
					<end_time>1</end_time>
					<!--Specifies how often to store results during a simulation. More specifically, the interval (a positive integer) specifies how many successful integration steps should be taken before results are recorded again.-->
					<step_interval>1</step_interval>
					<!--Flag (true or false) indicating whether the results are in degrees or not.-->
					<in_degrees>true</in_degrees>
					<body_name>pelvis</body_name>
					<relative_to_body_name>none</relative_to_body_name>
					<point_name>LPSI</point_name>
					<point> -0.168565 0.0330764 -0.0507053</point>
				</PointKinematics>
				<PointKinematics name="PointKinematics">
					<!--Flag (true or false) specifying whether on. True by default.-->
					<on>true</on>
					<!--Start time.-->
					<start_time>0</start_time>
					<!--End time.-->
					<end_time>1</end_time>
					<!--Specifies how often to store results during a simulation. More specifically, the interval (a positive integer) specifies how many successful integration steps should be taken before results are recorded again.-->
					<step_interval>1</step_interval>
					<!--Flag (true or false) indicating whether the results are in degrees or not.-->
					<in_degrees>true</in_degrees>
					<body_name>pelvis</body_name>
					<relative_to_body_name>none</relative_to_body_name>
					<point_name>RPSI</point_name>
					<point> -0.168565 0.0330764 0.0507053</point>
				</PointKinematics>
				<PointKinematics name="PointKinematics">
					<!--Flag (true or false) specifying whether on. True by default.-->
					<on>true</on>
					<!--Start time.-->
					<start_time>0</start_time>
					<!--End time.-->
					<end_time>1</end_time>
					<!--Specifies how often to store results during a simulation. More specifically, the interval (a positive integer) specifies how many successful integration steps should be taken before results are recorded again.-->
					<step_interval>1</step_interval>
					<!--Flag (true or false) indicating whether the results are in degrees or not.-->
					<in_degrees>true</in_degrees>
					<body_name>femur_r</body_name>
					<relative_to_body_name>none</relative_to_body_name>
					<point_name>RTHI</point_name>
					<point> 0.00109421 -0.266721 0.0939314</point>
				</PointKinematics>
				<PointKinematics name="PointKinematics">
					<!--Flag (true or false) specifying whether on. True by default.-->
					<on>true</on>
					<!--Start time.-->
					<start_time>0</start_time>
					<!--End time.-->
					<end_time>1</end_time>
					<!--Specifies how often to store results during a simulation. More specifically, the interval (a positive integer) specifies how many successful integration steps should be taken before results are recorded again.-->
					<step_interval>1</step_interval>
					<!--Flag (true or false) indicating whether the results are in degrees or not.-->
					<in_degrees>true</in_degrees>
					<body_name>tibia_r</body_name>
					<relative_to_body_name>none</relative_to_body_name>
					<point_name>RTIB</point_name>
					<point> -0.00512482 -0.280401 0.0550595</point>
				</PointKinematics>
				<PointKinematics name="PointKinematics">
					<!--Flag (true or false) specifying whether on. True by default.-->
					<on>true</on>
					<!--Start time.-->
					<start_time>0</start_time>
					<!--End time.-->
					<end_time>1</end_time>
					<!--Specifies how often to store results during a simulation. More specifically, the interval (a positive integer) specifies how many successful integration steps should be taken before results are recorded again.-->
					<step_interval>1</step_interval>
					<!--Flag (true or false) indicating whether the results are in degrees or not.-->
					<in_degrees>true</in_degrees>
					<body_name>tibia_r</body_name>
					<relative_to_body_name>none</relative_to_body_name>
					<point_name>RANK</point_name>
					<point> -0.00769151 -0.465157 0.0616636</point>
				</PointKinematics>
				<PointKinematics name="PointKinematics">
					<!--Flag (true or false) specifying whether on. True by default.-->
					<on>true</on>
					<!--Start time.-->
					<start_time>0</start_time>
					<!--End time.-->
					<end_time>1</end_time>
					<!--Specifies how often to store results during a simulation. More specifically, the interval (a positive integer) specifies how many successful integration steps should be taken before results are recorded again.-->
					<step_interval>1</step_interval>
					<!--Flag (true or false) indicating whether the results are in degrees or not.-->
					<in_degrees>true</in_degrees>
					<body_name>calcn_r</body_name>
					<relative_to_body_name>none</relative_to_body_name>
					<point_name>RHEE</point_name>
					<point> -0.0162173 0.0387516 -0.00268731</point>
				</PointKinematics>
				<PointKinematics name="PointKinematics">
					<!--Flag (true or false) specifying whether on. True by default.-->
					<on>true</on>
					<!--Start time.-->
					<start_time>0</start_time>
					<!--End time.-->
					<end_time>1</end_time>
					<!--Specifies how often to store results during a simulation. More specifically, the interval (a positive integer) specifies how many successful integration steps should be taken before results are recorded again.-->
					<step_interval>1</step_interval>
					<!--Flag (true or false) indicating whether the results are in degrees or not.-->
					<in_degrees>true</in_degrees>
					<body_name>calcn_r</body_name>
					<relative_to_body_name>none</relative_to_body_name>
					<point_name>RTOE</point_name>
					<point> 0.186576 0.0179504 0.0014454</point>
				</PointKinematics>
				<PointKinematics name="PointKinematics">
					<!--Flag (true or false) specifying whether on. True by default.-->
					<on>true</on>
					<!--Start time.-->
					<start_time>0</start_time>
					<!--End time.-->
					<end_time>1</end_time>
					<!--Specifies how often to store results during a simulation. More specifically, the interval (a positive integer) specifies how many successful integration steps should be taken before results are recorded again.-->
					<step_interval>1</step_interval>
					<!--Flag (true or false) indicating whether the results are in degrees or not.-->
					<in_degrees>true</in_degrees>
					<body_name>pedal_r</body_name>
					<relative_to_body_name>none</relative_to_body_name>
					<point_name>RPED</point_name>
					<point> 0.0440023 0.170174 -0.0289919</point>
				</PointKinematics>
			</objects>
			<groups />
		</AnalysisSet>
		<!--Controller objects in the model.-->
		<ControllerSet name="Controllers">
			<objects />
			<groups />
		</ControllerSet>
		<!--XML file (.xml) containing the forces applied to the model as ExternalLoads.-->
		<external_loads_file />
		<!--Storage file (.sto) containing the time history of states for the model. This file often contains multiple rows of data, each row being a time-stamped array of states. The first column contains the time.  The rest of the columns contain the states in the order appropriate for the model. In a storage file, unlike a motion file (.mot), non-uniform time spacing is allowed.  If the user-specified initial time for a simulation does not correspond exactly to one of the time stamps in this file, interpolation is NOT used because it is sometimes necessary to use an exact set of states for analyses.  Instead, the closest earlier set of states is used.-->
		<states_file />
		<!--Motion file (.mot) or storage file (.sto) containing the time history of the generalized coordinates for the model. These can be specified in place of the states file.-->
		<coordinates_file />
		<!--Storage file (.sto) containing the time history of the generalized speeds for the model. If coordinates_file is used in place of states_file, these can be optionally set as well to give the speeds. If not specified, speeds will be computed from coordinates by differentiation.-->
		<speeds_file />
		<!--Low-pass cut-off frequency for filtering the coordinates_file data (currently does not apply to states_file or speeds_file). A negative value results in no filtering. The default value is -1.0, so no filtering.-->
		<lowpass_cutoff_frequency_for_coordinates>-1</lowpass_cutoff_frequency_for_coordinates>
	</AnalyzeTool>
</OpenSimDocument>
